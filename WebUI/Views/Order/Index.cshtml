@using Application.UseCases.Order.Queries.GetOrdersWithPagination
@model Application.Common.Models.PaginatedList<Domain.Entities.Order>


<h2 style="text-align: center;margin: 2%;">Заказы</h2>

<table class="table">
    <thead class="thead-dark">
        <tr>
            <th scope="col">Id</th>
            <th scope="col">Дата</th>
            <th scope="col">Id Доставки</th>
            <th scope="col">Id Платежа</th>
            <th scope="col">Товары</th>
            <th scope="col">Удалить</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var order in Model.Items)
        {
            <tr>
                <td>@order.Id</td>
                <td>@order.Date</td>
                <td>
                    <a onclick="showInPopup('@Url.Action("Get", "Delivery", new {id = order.DeliveryId}, Context.Request.Scheme)', 'Доставка № @order.DeliveryId')">
                        @order.DeliveryId
                    </a>
                </td>
                <td>
                    <a onclick="showInPopup('@Url.Action("Get", "Payment", new {id = order.PaymentId}, Context.Request.Scheme)', 'Платёж № @order.PaymentId')">
                        @order.PaymentId
                    </a>
                </td>
                <td>
                    <a onclick="showInPopup('@Url.Action("GetOrderProducts", "Order", new {orderId = order.Id},
                                                 Context.Request.Scheme)', 'Товары заказа № @order.Id')">
                        Просмотреть
                    </a>
                </td>
                @if (Model.Items.Count is 1 && Model.TotalPages > 1)
                {
                    <td>
                        <a asp-action="Delete" asp-controller="Order" asp-route-id="@order.Id" style="color:red"
                           asp-route-returnUrl="@Url.PageLink(null, null, new {PageNumber = Model.PageNumber - 1, Model.PageSize})">Удалить</a>
                    </td>
                }
                else
                {
                    <td>
                        <a asp-action="Delete" asp-controller="Order" asp-route-id="@order.Id" style="color:red"
                           asp-route-returnUrl="@Url.PageLink(null, null, new {Model.PageNumber, Model.PageSize})">Удалить</a>
                    </td>
                }
            </tr>
        }
    </tbody>
</table>

<nav>
    <ul class="pagination justify-content-center">
        @if (Model.HasPreviousPage)
        {
            <li class="page-item">
                @Html.ActionLink("Previous", "Index", "Order",
                new GetOrdersWithPaginationQuery { PageNumber = Model.PageNumber - 1 },
                new { @class = "page-link" })
            </li>
        }
        else
        {
            <li class="page-item disabled">
                @Html.ActionLink("Previous", "Index", "Order",
                new GetOrdersWithPaginationQuery { PageNumber = Model.PageNumber - 1 },
                new { @class = "page-link" })
            </li>
        }
        @for (int i = 1; i <= Model.TotalPages; i++)
        {
            if (Model.PageNumber.Equals(i))
            {
                <li class="page-item active">
                    @Html.ActionLink($"{i}", "Index", "Order",
                    new GetOrdersWithPaginationQuery { PageNumber = i },
                    new { @class = "page-link" })
                </li>
            }
            else
            {
                <li class="page-item">
                    @Html.ActionLink($"{i}", "Index", "Order",
                    new GetOrdersWithPaginationQuery { PageNumber = i },
                    new { @class = "page-link" })
                </li>
            }
        }
        @if (Model.HasNextPage)
        {
            <li class="page-item">
                @Html.ActionLink("Next", "Index", "Order",
                new GetOrdersWithPaginationQuery { PageNumber = Model.PageNumber + 1 },
                new { @class = "page-link" })
            </li>
        }
        else
        {
            <li class="page-item disabled">
                @Html.ActionLink("Next", "Index", "Order",
                new GetOrdersWithPaginationQuery { PageNumber = Model.PageNumber + 1 },
                new { @class = "page-link" })
            </li>
        }
    </ul>
</nav>

<div>
    @if (Model.HasPreviousPage)
    {
        @Html.ActionLink("Previous page", "Index", "Order",
            new GetOrdersWithPaginationQuery { PageNumber = Model.PageNumber - 1 })
    }
    @if (Model.HasNextPage)
    {
        @Html.ActionLink("Next page", "Index", "Order",
            new GetOrdersWithPaginationQuery { PageNumber = Model.PageNumber + 1 })
    }
</div>