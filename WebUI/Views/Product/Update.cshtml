@using Domain.Entities
@using Microsoft.AspNetCore.Http
@model Application.UseCases.Product.Commands.UpdateProduct.UpdateProductCommand

@{
    Layout = null;

    IEnumerable<Subcategory> subcategories = ViewBag.Subcategories;
    var subcategoriesNames = subcategories.Select(s => s.Name);

    IList<string> previousImages = ViewBag.Pictures;
    Model.Pictures = new IFormFile[3];

    for (int i = 0; i < Model.Pictures.Length; i++)
    {
        Model.Pictures[i] = null;
    }
}

@await Html.PartialAsync("_StylesImportPartial")

@using (Html.BeginForm("Update", "Product", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.HiddenFor(m => m.Id)

    <div class="form-group">
        @Html.Label("Изменить название")
        @Html.EditorFor(m => m.Name, new
        {
            htmlAttributes = new
            {
                placeholder = "Название",
                type = "text",
                @class = "form-control",
            }
        })
    </div>

    <div class="form-group">
        @Html.Label("Изменить описание")
        <textarea asp-for="@Model.Description" required maxlength="500" placeholder="Описание" type="text" class="form-control" rows="3"></textarea>
    </div>

    <div class="form-group">
        @Html.Label("Изменить стоимость")
        @Html.EditorFor(m => m.Price, new
        {
            htmlAttributes = new
            {
                type = "number",
                @class = "form-control",
            }
        })
    </div>

    <div class="form-group">
        @Html.Label("Изменить количество на единицу товара")
        @Html.EditorFor(m => m.QuantityPerUnit, new
        {
            htmlAttributes = new
            {
                type = "number",
                @class = "form-control",
            }
        })
    </div>

    <div class="form-group">
        @Html.Label("Изменить вес")
        @Html.EditorFor(m => m.Weight, new
        {
            htmlAttributes = new
            {
                type = "number",
                @class = "form-control",
            }
        })
    </div>

    <div class="form-group">
        @Html.Label("Изменить категорию")
        <select asp-for="CategoryName" asp-items="new SelectList(subcategoriesNames)"
                class="form-control">
        </select>
    </div>

    <div>
        @Html.Label("Изменить изображения")
        @for (int i = 0; i < Model.Pictures.Length; i++)
        {
            var pictureNumber = i + 1;

                <p>Изображение: @pictureNumber</p>
            <div class="form-group">
                <p>Текущее изображение:</p>
                <img src="@previousImages[i]" style="width: 150px" alt="@Model.Name" />
            </div>

            <div class="form-group">
                <div class="custom-file">
                    @{
                        var pictureName = $"Picture{i + 1}";
                    }

                    <input name="@pictureName" asp-for="Pictures" accept="image/*" class="custom-file-input"/>

                    @Html.Label("Выбрать изображение", "Выбрать изображение", new
                    {
                        @class = "custom-file-label"
                    })
                </div>
            </div>
        }
    </div>

    <div>
        <input type="submit" value="Сохранить" class="btn btn-primary" style="width: 100%" />
    </div>
}

@await Html.PartialAsync("_ScriptsImportPartial")
@await Html.PartialAsync("_ValidationScriptsImportPartial")

<script>
    $("#createProductForm").validate({
        rules: {
            Name: {
                required: true,
                minlength: 3,
                maxlength: 100
            },
            Description: {
                maxlength: 500
            },
            Price: {
                required: true,
                number: true,
                min: 0.1
            },
            QuantityPerUnit: {
                required: true,
                digits: true,
                min: 1
            },
            Weight: {
                required: true,
                number: true,
                min: 0.1
            },
            Picture1: {
                required: true
            },
            Picture2: {
                required: true
            },
            Picture3: {
                required: true
            }
        },
        messages: {
            Name: {
                required: "Это поле является обязательным!",
                minlength: "Введите не менее 3 символов!",
                maxlength: "Введите не более 100 символов!"
            },
            Description: {
                maxlength: "Введите не более 500 символов!"
            },
            Price: {
                required: "Это поле является обязательным!",
                number: "Введите верное число!",
                min: "Введите число больше 0.1"
            },
            QuantityPerUnit: {
                required: "Это поле является обязательным!",
                digits: "Введите верное число!",
                min: "Введите число больше 1"
            },
            Weight: {
                required: "Это поле является обязательным!",
                number: "Введите верное число!",
                min: "Введите число больше 0.1"
            },
            Picture1: {
                required: "Это поле является обязательным!"
            },
            Picture2: {
                required: "Это поле является обязательным!"
            },
            Picture3: {
                required: "Это поле является обязательным!"
            }
        },
        errorElement: "em"
    });
</script>