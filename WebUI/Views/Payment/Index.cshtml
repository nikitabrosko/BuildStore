@using Application.UseCases.Payment.Queries.GetPaymentsWithPagination
@model Application.Common.Models.PaginatedList<Domain.Entities.Payment>

<h2 style="text-align: center;margin: 2%;">Платежи</h2>

<table class="table">
    <thead class="thead-dark">
        <tr>
            <th scope="col">Id</th>
            <th scope="col">Тип платежа</th>
            <th scope="col">Оплачен</th>
            <th scope="col">Id Заказа</th>
            <th scope="col">Редактировать</th>
            <th scope="col">Удалить</th>
        </tr>
    </thead>
    <tbody>
    @foreach (var payment in Model.Items)
    {
        <tr>
            <td>@payment.Id</td>
            <td>@payment.Type</td>
            <td>@payment.Allowed</td>
            <td>
                <a onclick="showInPopup('@Url.Action("Get", "Order", new {id = payment.OrderId}, Context.Request.Scheme)', 'Заказ № @payment.OrderId')">
                    @payment.OrderId
                </a>
            </td>
            @if (Model.Items.Count is 1 && Model.TotalPages > 1)
            {
                <td>
                    <a onclick="showInPopup('@Url.Action("Update", "Payment", new{id = payment.Id,
                                                 routeUrl = Url.PageLink(null, null,
                                                     new {PageNumber = Model.PageNumber - 1, Model.PageSize})},
                                                 Context.Request.Scheme)', 'Редактировать платёж')">
                        Редактировать
                    </a>
                </td>
                <td>
                    <a asp-action="Delete" asp-controller="Payment" asp-route-id="@payment.Id" style="color:red"
                       asp-route-returnUrl="@Url.PageLink(null, null, new {PageNumber = Model.PageNumber - 1, Model.PageSize})">Удалить</a>
                </td>
            }
            else
            {
                <td>
                    <a onclick="showInPopup('@Url.Action("Update", "Payment", new{id = payment.Id,
                                                 routeUrl = Url.PageLink(null, null,
                                                     new {PageNumber = Model.PageNumber, Model.PageSize})},
                                                 Context.Request.Scheme)', 'Редактировать платёж')">
                        Редактировать
                    </a>
                </td>
                <td>
                    <a asp-action="Delete" asp-controller="Payment" asp-route-id="@payment.Id" style="color:red"
                       asp-route-returnUrl="@Url.PageLink(null, null, new {Model.PageNumber, Model.PageSize})">Удалить</a>
                </td>
            }
        </tr>
    }
    </tbody>
</table>

<nav>
    <ul class="pagination justify-content-center">
        @if (Model.HasPreviousPage)
        {
            <li class="page-item">
                @Html.ActionLink("Previous", "Index", "Payment",
                new GetPaymentsWithPaginationQuery { PageNumber = Model.PageNumber - 1 },
                new { @class = "page-link" })
            </li>
        }
        else
        {
            <li class="page-item disabled">
                @Html.ActionLink("Previous", "Index", "Payment",
                new GetPaymentsWithPaginationQuery { PageNumber = Model.PageNumber - 1 },
                new { @class = "page-link" })
            </li>
        }
        @for (int i = 1; i <= Model.TotalPages; i++)
        {
            if (Model.PageNumber.Equals(i))
            {
                <li class="page-item active">
                    @Html.ActionLink($"{i}", "Index", "Payment",
                    new GetPaymentsWithPaginationQuery { PageNumber = i },
                    new { @class = "page-link" })
                </li>
            }
            else
            {
                <li class="page-item">
                    @Html.ActionLink($"{i}", "Index", "Payment",
                    new GetPaymentsWithPaginationQuery { PageNumber = i },
                    new { @class = "page-link" })
                </li>
            }
        }
        @if (Model.HasNextPage)
        {
            <li class="page-item">
                @Html.ActionLink("Next", "Index", "Payment",
                new GetPaymentsWithPaginationQuery { PageNumber = Model.PageNumber + 1 },
                new { @class = "page-link" })
            </li>
        }
        else
        {
            <li class="page-item disabled">
                @Html.ActionLink("Next", "Index", "Payment",
                new GetPaymentsWithPaginationQuery { PageNumber = Model.PageNumber + 1 },
                new { @class = "page-link" })
            </li>
        }
    </ul>
</nav>