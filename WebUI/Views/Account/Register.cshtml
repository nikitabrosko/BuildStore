@model Application.UseCases.Identity.User.Commands.CreateUser.CreateUserCommand

@{
    Layout = null;
}

@await Html.PartialAsync("_StylesImportPartial")

@using (Html.BeginForm("Register", "Account", FormMethod.Post,
 new { @id = "registerAccountForm" }))
{
    @Html.HiddenFor(m => m.ReturnUrl)

    <div class="form-group">
        @Html.Label("Логин")
        @Html.EditorFor(m => m.Name, new
        {
            htmlAttributes = new
            {
                required = "true",
                minlength = "2",
                maxlength = "40",
                placeholder = "Name",
                type = "text",
                @class = "form-control",
            }
        })
    </div>

    <div class="form-group">
        @Html.Label("Email")
        @Html.EditorFor(m => m.Email, new
        {
            htmlAttributes = new
            {
                required = "true",
                minlength = "5",
                maxlength = "50",
                placeholder = "Email",
                type = "email",
                @class = "form-control",
            }
        })
    </div>

    <div class="form-group">
        @Html.Label("Пароль")
        @Html.EditorFor(m => m.Password, new
        {
            htmlAttributes = new
            {
                required = "true",
                minlength = "4",
                maxlength = "30",
                type = "password",
                @class = "form-control",
            }
        })
    </div>

    <div class="form-group">
        @Html.Label("Подтверждение пароля")
        <input type="password" minlength="4" maxlength="30" name="Password_confirmation"
               id="Password_confirmation" required class="form-control"/>
    </div>

    <div>
        <input type="submit" value="Зарегистрироваться" class="btn btn-primary" style="width: 100%" />
    </div>
}

@await Html.PartialAsync("_ScriptsImportPartial")
@await Html.PartialAsync("_ValidationScriptsImportPartial")

<script>
    $("#registerAccountForm").validate({
        rules: {
            Password: "required",
            Password_confirmation: {
                equalTo: "#Password"
            }
        },
        messages: {
            Password_confirmation: {
                equalTo: "Invalid confirmation password!"
            }
        }
    });
</script>