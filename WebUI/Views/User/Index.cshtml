@using Application.UseCases.Identity.User.Queries.GetUsersWithPagination
@model Application.Common.Models.PaginatedList<Domain.IdentityEntities.User>

<h2>Users</h2>

<table>
    <thead>
        <tr>
            <th>
                <a asp-action="Create" asp-controller="User">Create user</a>
            </th>
        </tr>
    </thead>
</table>

<table>
    <thead>
    <tr>
        <th hidden>id</th>
        <th>User name</th>
        <th>Email</th>
    </tr>
    </thead>
    <tbody>
    @foreach (var user in Model.Items)
    {
        <tr>
            <td hidden>@user.Id</td>
            <td>@user.UserName</td>
            <td>@user.Email</td>
            <td>
                <a asp-action="Update" asp-controller="User" asp-route-id="@user.Id">Edit</a>
            </td>
            <td>
                <a asp-action="ChangePassword" asp-controller="User" asp-route-id="@user.UserName">Change password</a>
            </td>
            <td>
                <a asp-action="Delete" asp-controller="User" asp-route-id="@user.Id">Delete</a>
            </td>
        </tr>
    }
    </tbody>
</table>

<nav>
    <ul class="pagination justify-content-center">
        @if (Model.HasPreviousPage)
        {
            <li class="page-item">
                @Html.ActionLink("Previous", "Index", "User",
                new GetUsersWithPaginationQuery { PageNumber = Model.PageNumber - 1 },
                new { @class = "page-link" })
            </li>
        }
        else
        {
            <li class="page-item disabled">
                @Html.ActionLink("Previous", "Index", "User",
                new GetUsersWithPaginationQuery { PageNumber = Model.PageNumber - 1 }, 
                    new { @class = "page-link" })
            </li>
        }
        @for (int i = 1; i <= Model.TotalPages; i++)
        {
            if (Model.PageNumber.Equals(i))
            {
                <li class="page-item active">
                    @Html.ActionLink($"{i}", "Index", "User",
                    new GetUsersWithPaginationQuery { PageNumber = i }, 
                        new { @class = "page-link" })
            </li>
            }
            else
            {
                <li class="page-item">
                    @Html.ActionLink($"{i}", "Index", "User",
                    new GetUsersWithPaginationQuery { PageNumber = i }, 
                        new { @class = "page-link" })
                </li>
            }
        }
        @if (Model.HasNextPage)
        {
            <li class="page-item">
                @Html.ActionLink("Next", "Index", "User",
                new GetUsersWithPaginationQuery { PageNumber = Model.PageNumber + 1 }, 
                    new { @class = "page-link" })
            </li>
        }
        else
        {
            <li class="page-item disabled">
                @Html.ActionLink("Next", "Index", "User",
                new GetUsersWithPaginationQuery { PageNumber = Model.PageNumber + 1 },
                    new { @class = "page-link" })
            </li>
        }
    </ul>
</nav>